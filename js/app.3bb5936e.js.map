{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///src/components/phylogeny/Phylotree.vue","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue?2b92","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue?bf90","webpack:///src/App.vue","webpack:///./src/components/PhylorefTable.vue?6c12","webpack:///./src/App.vue?1160","webpack:///src/components/TopNavigationBar.vue","webpack:///./src/App.vue?bff9","webpack:///./src/store/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/main.js","webpack:///./src/components/TopNavigationBar.vue?d79a","webpack:///src/components/modals/AboutOpenTreeResolverModal.vue","webpack:///src/components/PhylorefTable.vue","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue?f979","webpack:///./src/components/phylogeny/Phylotree.vue?ec67","webpack:///./src/components/phylogeny/Phylotree.vue?5403","webpack:///./src/components/TopNavigationBar.vue?78f6","webpack:///./src/components/TopNavigationBar.vue?07ce","webpack:///./src/components/PhylorefTable.vue","webpack:///./src/components/phylogeny/Phylotree.vue?ad27","webpack:///./src/config.js","webpack:///./src/components/phylogeny/Phylotree.vue?bb9f","webpack:///./src/components/phylogeny/Phylotree.vue?9b4a","webpack:///./src/components/PhylorefTable.vue?ac76","webpack:///./src/components/PhylorefTable.vue?2dfc","webpack:///./src/components/TopNavigationBar.vue","webpack:///./src/components/modals/AboutOpenTreeResolverModal.vue","webpack:///./src/App.vue?d103","webpack:///./src/App.vue?19ec"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","props","newick","type","String","default","spacingX","Number","phylogenyIndex","baseURIForPhylogeny","displayInternalNodes","Boolean","computed","baseURIForPhylogenyComputed","this","parsedNewick","newickErrors","errors","filter","tree","methods","redrawTree","mounted","watch","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","attrs","_v","components","TopNavigationBar","PhylorefTable","AboutOpenTreeResolverModal","Phylotree","allSpecifiers","phylorefs","map","ottIdsForAllSpecifiers","ottIds","ottInfoBySpecifierLabel","forEach","specifierLabel","ottId","exampleJSONLDURLs","url","title","getSpecifiersForPhyloref","specifiers","concat","phyloref","externalSpecifiers","getScinameForSpecifier","getOTTId","matches","downloadInducedSubtreeFromOToL","unknownOttIds","unknownOttIdReasons","$config","OTT_API_INDUCED_SUBTREE","JSON","stringify","ott_ids","contentType","dataType","success","queryOTTIds","queryOTTIdsForNames","results","setOTTInfoByNames","names","options","chunk","convertTUtoRestriction","getPhylorefsAndPhylogenyAsOntology","phylorefsWithEquivalentClass","nodesByID","phylogenyNodes","node","Array","isArray","representsTaxonomicUnits","onProperty","someValuesFrom","restriction","downloadAsJSONLD","reasonOverPhylogeny","reasoningInProgress","reasoningResults","jsonldGzipped","Buffer","from","toString","console","log","query","signature","outerThis","JPHYLOREF_SUBMISSION_URL","headers","error","jqXHR","responseJSON","undefined","alert","loadJSONLDFromURL","loadJSONLDFromFileInputById","FileReader","$fileInput","prop","files","fr","onload","readAsText","file","extractPhylorefsFromJSONLD","jsonld","version","component","Vue","use","Vuex","debug","process","Store","state","strict","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","$","require","BootstrapVue","VueResize","config","productionTip","el","store","h","App","getURLForOTNode","match","getLabelForOTNode","getNodeLabel","labels","getPhylorefDescription","description","replace","getSpecifierType","getLabelForSpecifierAsHTML","label","_s","JPHYLOREF_X_HUB_SIGNATURE_SECRET","OTT_API_TNRS_MATCH_NAMES","_l","errorIndex","message","on","$event","_e","phylorefIndex","domProps","specifier","specifierIndex","example","directives","rawName","expression","modifiers","target","index","substring","ONTOLOGY_BASEURI"],"mappings":"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","file":"js/app.3bb5936e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/open-tree-resolver/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","<template>\n  <div>\n    <template v-if=\"newickErrors.length > 0\">\n      <template v-for=\"(error, errorIndex) of newickErrors\">\n        <p :key=\"errorIndex\"><strong>{{ error.title }}.</strong> {{ error.message }}</p>\n      </template>\n    </template>\n    <div\n      v-else\n      class=\"phylotreeContainer\"\n    >\n      <svg\n        class=\"col-md-12 phylogeny\"\n        :id=\"'phylogeny_' + phylogenyIndex\"\n      />\n      <ResizeObserver @notify=\"redrawTree()\" />\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * This component uses Phylotree.js to display a phylogeny, including internal\n * nodes. It does not support highlighting resolved clades.\n *\n * Note that this requires the Phylotree Javascript to be loaded in the HTML header:\n * I haven't figured out how to include phylotree.js from within Vue CLI yet.\n */\n\nimport { uniqueId, has } from 'lodash';\nimport { PhylogenyWrapper, TaxonomicUnitWrapper } from '@phyloref/phyx';\nimport Vue from 'vue';\nimport jQuery from 'jquery';\nimport { ResizeObserver } from 'vue-resize';\n\n// Set up ResizeObserver so we can redraw the tree if the window is resized.\nVue.component('ResizeObserver', ResizeObserver);\n\nexport default {\n  name: 'Phylotree',\n  props: {\n    /* Parameters */\n    newick: { // The Newick string of the phylogeny to display.\n      type: String,\n      default: '()',\n    },\n    spacingX: { // Spacing in the X axis in pixels.\n      type: Number,\n      default: 20,\n    },\n    phylogenyIndex: { // An index number of the phylogeny. Will be used to set up HTML DOM IDs.\n      type: String,\n      default: uniqueId(),\n    },\n    baseURIForPhylogeny: {\n      type: String,\n    },\n\n    /* Configuration options */\n    displayInternalNodes: { // Flag for whether to display internal node labels\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    baseURIForPhylogenyComputed() {\n      return this.baseURIForPhylogeny || `http://example.org/#phylogeny${this.phylogenyIndex}`;\n    },\n    parsedNewick() {\n      // Return a tree-like structure that represents a Newick string. Phylotree.js\n      // is loaded,we use d3.layout.newick_parser; otherwise, we use the default\n      // parser used by PhylogenyWrapper.\n      if (has(window, 'd3') && has(window.d3, 'layout') && has(window.d3.layout, 'newick_parser')) {\n        return new PhylogenyWrapper({ newick: this.newick }).getParsedNewickWithIRIs(\n          this.baseURIForPhylogenyComputed,\n          window.d3.layout.newick_parser,\n        );\n      }\n\n      return new PhylogenyWrapper({ newick: this.newick }).getParsedNewickWithIRIs(\n        this.baseURIForPhylogenyComputed\n      );\n    },\n    newickErrors() {\n      // Return a list of errors found in this Newick string.\n      const errors = PhylogenyWrapper.getErrorsInNewickString(this.newick);\n\n      // For historical reason, we consider an empty Newick string as an error.\n      // Will be fixed in https://github.com/phyloref/phyx.js/issues/13\n      return errors.filter(error => error.title !== 'No phylogeny entered');\n    },\n    tree() {\n      // Set up Phylotree.js.\n\n      // Is Phylotree actually loaded? If not, bail out.\n      if (!has(window, 'd3') || !has(window.d3, 'layout') || !has(window.d3.layout, 'phylotree')) return;\n\n      // Set up Phylotree.\n      const tree = window.d3.layout.phylotree()\n        .svg(window.d3.select(`#phylogeny_${this.phylogenyIndex}`))\n        .options({\n          'internal-names': true,\n          transitions: false,\n          'left-right-spacing': 'fit-to-size',\n          'top-bottom-spacing': 'fixed-step',\n        })\n        .style_nodes((element, data) => {\n          // Instructions used to style nodes in Phylotree\n          // - element: The D3 element of the node being styled\n          // - data: The data associated with the node being styled\n\n          // Make sure we don't already have an internal label node on this SVG node!\n          let textLabel = element.selectAll('text');\n\n          if (this.displayInternalNodes && has(data, 'name') && data.name !== '' && data.children) {\n            // If the node has a label and has children (i.e. is an internal node),\n            // we display it next to the node by creating a new 'text' element.\n            if (textLabel.empty()) {\n              textLabel = element.append('text');\n\n              // Place internal label to the left of the root node.\n              textLabel.classed('internal-label', true)\n                .text(data.name)\n                .attr('dx', '.3em')\n                .attr('dy', '.3em');\n            }\n          }\n\n          if (data.name !== undefined && data.children === undefined) {\n            // Labeled leaf node! Look for taxonomic units.\n            const tunit = TaxonomicUnitWrapper.fromLabel(data.name);\n\n            if (!tunit) {\n              element.classed('terminal-node-without-tunits', true);\n            }\n          }\n        });\n      tree(this.parsedNewick);\n      return tree;\n    },\n  },\n  methods: {\n    redrawTree() {\n      // Redraw the tree set up earlier.\n      const tree = this.tree;\n\n      if (tree) {\n        // Draw the tree.\n        this.tree\n          .size([\n            // height\n            0,\n            // width\n            jQuery(`#phylogeny_${this.phylogenyIndex}`).width(),\n            // We need more space because our fonts are bigger than the default.\n          ])\n          .spacing_x(this.spacingX)\n          .update();\n      }\n    },\n  },\n  mounted() {\n    // Redraw the tree when this component is loaded for the first time.\n    this.redrawTree();\n  },\n  watch: {\n    newick() {\n      // If the Newick changes, redraw the tree.\n      this.redrawTree();\n    },\n  },\n};\n</script>\n\n<style>\n.phylogeny {\n  width: 100%;\n}\n.phylotreeContainer {\n  /* Required for Vue-Resize to track its size */\n  position: relative;\n}\n\n/*\n * Classes for phylogeny SVG elements\n */\n\n/*\n * Phylotree .node refers to the SVG groups that contain both the\n * node itself as well as the text label next to it. This is confusing,\n * but we will try to use that consistently below: *-node refers to the group\n * that includes both the node as well as the label with it, while *-label\n * refers only to the labels next to the nodes.\n */\n.node {\n  /* Phylotree's CSS sets this to 10px; we prefer larger node labels */\n  font-size: 11pt;\n}\n\n/* Labels for internal nodes, whether phylorefs or not */\n.internal-label {\n  font-family: serif;\n  font-size: 16pt;\n  font-style: italic;\n\n  text-anchor: start; /* Align text so it starts at the coordinates provided */\n}\n\n/* Node label for an internal specifier */\n.internal-specifier-node text {\n    font-weight: bolder;\n    fill: rgb(0, 24, 168) !important;\n}\n\n/* Node label for an external specifier */\n.external-specifier-node text {\n    font-weight: bolder;\n    fill: rgb(0, 24, 168) !important;\n}\n\n/* Node label for a terminal node without taxonomic units */\n.terminal-node-without-tunits {\n}\n\n/*\n * Create a table class for a fixed size body.\n * Based on https://stackoverflow.com/a/23518856/27310\n */\n.table-fixed-height {\n}\n\n.table-fixed-height thead {\n    display: block;\n    width: 100%;\n}\n\n.table-fixed-height tbody {\n    display: block;\n    width: 100%;\n    height: 15em;\n    overflow-y: scroll;\n    z-index: -1;\n}\n\n.table-fixed-height tr {\n    width: 100%;\n    display: inline-table;\n    table-layout: fixed;\n}\n\n/*\n * The following code is stolen from Bootstrap 3.3, which is a Phylotree.js\n * dependency. Since we otherwise use Bootstrap 4+, we need to override this\n * here so the menu works.\n *\n * We apply it only to subclasses of #d3_layout_phylotree_context_menu to limit\n * their fallout on other elements.\n */\n#d3_layout_phylotree_context_menu.dropdown-menu {\n position: absolute;\n top: 100%;\n left: 0;\n z-index: 1000;\n display: none;\n float: left;\n min-width: 160px;\n padding: 5px 0;\n margin: 2px 0 0;\n font-size: 14px;\n text-align: left;\n list-style: none;\n background-color: #fff;\n -webkit-background-clip: padding-box;\n         background-clip: padding-box;\n border: 1px solid #ccc;\n border: 1px solid rgba(0, 0, 0, .15);\n border-radius: 4px;\n -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, .175);\n         box-shadow: 0 6px 12px rgba(0, 0, 0, .175);\n}\n#d3_layout_phylotree_context_menu.dropdown-menu.pull-right {\n right: 0;\n left: auto;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu .divider {\n height: 1px;\n margin: 9px 0;\n overflow: hidden;\n background-color: #e5e5e5;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a {\n display: block;\n padding: 3px 20px;\n clear: both;\n font-weight: normal;\n line-height: 1.42857143;\n color: #333;\n white-space: nowrap;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > li > a:focus {\n color: #262626;\n text-decoration: none;\n background-color: #f5f5f5;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a,\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .active > a:focus {\n color: #fff;\n text-decoration: none;\n background-color: #337ab7;\n outline: 0;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:focus {\n color: #777;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:hover,\n#d3_layout_phylotree_context_menu.dropdown-menu > .disabled > a:focus {\n text-decoration: none;\n cursor: not-allowed;\n background-color: transparent;\n background-image: none;\n filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);\n}\n.open > #d3_layout_phylotree_context_menu.dropdown-menu {\n display: block;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu-right {\n right: 0;\n left: auto;\n}\n#d3_layout_phylotree_context_menu.dropdown-menu-left {\n right: auto;\n left: 0;\n}\n#d3_layout_phylotree_context_menu.dropdown-header {\n display: block;\n padding: 3px 20px;\n font-size: 12px;\n line-height: 1.42857143;\n color: #777;\n white-space: nowrap;\n}\n#d3_layout_phylotree_context_menu.dropdown-backdrop {\n position: fixed;\n top: 0;\n right: 0;\n bottom: 0;\n left: 0;\n z-index: 990;\n}\n\n</style>\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal\",attrs:{\"id\":\"about-open-tree-resolver\",\"tabindex\":\"-1\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(\"\\n          About this tool\\n        \")]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\",\"aria-label\":\"Close\"}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"\\n            ×\\n          \")])])]),_c('div',{staticClass:\"modal-body col-md-12\"},[_c('p',[_vm._v(\"\\n          The Phyloreference Open Tree Resolver was built as part of the\\n          \"),_c('a',{attrs:{\"href\":\"https://www.phyloref.org\"}},[_vm._v(\"\\n            Phyloreferencing project\\n          \")]),_vm._v(\",\\n          funded by the US National Science Foundation through collaborative\\n          grants \"),_c('a',{attrs:{\"href\":\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458484\"}},[_vm._v(\"\\n            DBI-1458484\\n          \")]),_vm._v(\"\\n          and \"),_c('a',{attrs:{\"href\":\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458604\"}},[_vm._v(\"\\n            DBI-1458604\\n          \")]),_vm._v(\".\\n          See \"),_c('a',{attrs:{\"href\":\"http://www.phyloref.org/about/#funding\"}},[_vm._v(\"\\n            Funding\\n          \")]),_vm._v(\" for details.\\n        \")]),_c('p',[_vm._v(\"The Curation Tool uses a number of open-source libraries, including:\")]),_c('ul',[_c('li',[_c('a',{attrs:{\"href\":\"https://cli.vuejs.org/\"}},[_vm._v(\"\\n              Vue CLI 3\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://getbootstrap.com/\"}},[_vm._v(\"\\n              Bootstrap\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://jquery.com/\"}},[_vm._v(\"\\n              jQuery\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/veg/phylotree.js\"}},[_vm._v(\"\\n              phylotree.js\\n            \")]),_vm._v(\",\\n            published as \"),_c('a',{attrs:{\"href\":\"https://doi.org/10.1186/s12859-018-2283-2\"}},[_vm._v(\"\\n              Shank \"),_c('em',[_vm._v(\"et al\")]),_vm._v(\", 2018\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://d3js.org/\"}},[_vm._v(\"\\n              D3.js\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://momentjs.com/\"}},[_vm._v(\"\\n              Moment.js\\n            \")])]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/eligrey/FileSaver.js\"}},[_vm._v(\"\\n              FileSaver.js\\n            \")])])])]),_c('div',{staticClass:\"modal-footer\"},[_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\",\"data-dismiss\":\"modal\"}},[_vm._v(\"\\n          Close\\n        \")])])])])])}]\n\nexport { render, staticRenderFns }","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"f030d2b6-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutOpenTreeResolverModal.vue?vue&type=template&id=40ef49c2&\"","<template>\n  <div id=\"app\">\n    <TopNavigationBar :version=\"version\" />\n    <div id=\"wrapper\">\n      <div class=\"card border-dark\">\n        <h5 class=\"card-header border-dark\">\n          Phyloreferences\n        </h5>\n        <div class=\"card-body p-0\">\n          <PhylorefTable\n            :phylorefs=\"phylorefs\"\n            :ottInfoBySpecifierLabel=\"ottInfoBySpecifierLabel\"\n            :reasoningResults=\"reasoningResults\"\n            :nodesByID=\"nodesByID\"\n            :unknownOttIdReasons=\"unknownOttIdReasons\"\n          />\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group\" role=\"group\" area-label=\"Add phyloreferences\">\n            <button\n              class=\"btn btn-primary\"\n              href=\"javascript:;\"\n              onclick=\"$('#load-jsonld').trigger('click')\"\n            >\n              Import from ontology in JSON-LD\n            </button>\n            <input\n              id=\"load-jsonld\"\n              type=\"file\"\n              multiple=\"true\"\n              class=\"d-none\"\n              @change=\"loadJSONLDFromFileInputById('#load-jsonld')\"\n            >\n            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"addFromExamples\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n              Add phyloreferences from example\n            </button>\n            <div class=\"dropdown-menu\" aria-labelledby=\"addFromExamples\">\n              <a href=\"javascript:;\" class=\"dropdown-item\" v-for=\"example of exampleJSONLDURLs\" v-bind:key=\"example.url\" @click=\"loadJSONLDFromURL(example.url)\">\n                {{example.title}}\n              </a>\n            </div>\n          </div>\n          <div class=\"btn-group ml-2\" role=\"group\" area-label=\"Actions on phyloreferences\">\n            <button class=\"btn btn-danger\" type=\"button\" @click=\"phylorefs = []; reasoningResults = {};\">\n              Clear phylorefs\n            </button>\n          </div>\n          <div class=\"btn-group ml-2\" role=\"group\" area-label=\"Open Tree Taxonomy tasks\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"queryOTTIds()\">\n              Query specifiers against Open Tree of Life Taxonomy\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card border-dark mt-2\">\n        <h5 class=\"card-header border-dark\">\n          Phylogeny\n        </h5>\n        <div class=\"card-body\">\n          <form>\n            <div class=\"form-group row\">\n              <label\n                for=\"newick\"\n                class=\"col-md-2 control-label\"\n              >\n                Newick\n              </label>\n              <div class=\"col-md-10 input-group\">\n                <textarea\n                  v-model.lazy=\"newick\"\n                  rows=\"3\"\n                  class=\"form-control\"\n                  placeholder=\"Enter Newick string for phylogeny here\"\n                />\n              </div>\n            </div>\n            <div class=\"form-group row\" v-if=\"unknownOttIds.length > 0\">\n              <label\n                for=\"newick\"\n                class=\"col-md-2 control-label\"\n              >\n                Taxa with Open Tree IDs but not on the synthetic tree\n              </label>\n              <div class=\"col-md-10 input-group\">\n                <template v-for=\"(ottId, index) of unknownOttIds\">\n                  <a\n                    target=\"_blank\"\n                    :key=\"'unknownOttIds_a_' + ottId\"\n                    :href=\"'https://tree.opentreeoflife.org/taxonomy/browse?id=' + ottId.substring(3)\"\n                  >{{ottId}}</a>\n                  <span :key=\"'unknownOttIds_span_' + ottId\" v-if=\"index+1 < unknownOttIds.length\" class=\"pr-1\">,</span>\n                </template>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group\" role=\"group\" area-label=\"Look up trees on the Open Tree of Life\">\n            <button\n              class=\"btn btn-primary\"\n              href=\"javascript:;\"\n              @click=\"downloadInducedSubtreeFromOToL(ottIdsForAllSpecifiers)\"\n            >\n              Download induced subtree from the Open Tree of Life\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- Display the phylogeny (unless there were Newick parsing errors) -->\n      <div\n        class=\"card border-dark mt-2\"\n      >\n        <h5 class=\"card-header\">\n          Phylogeny visualization\n        </h5>\n        <div class=\"card-body\">\n          <Phylotree\n            :newick=\"newick\"\n            :baseURIForPhylogeny=\"ONTOLOGY_BASEURI + 'phylogeny'\"\n          />\n        </div>\n        <div class=\"card-footer\">\n          <div class=\"btn-group\" role=\"group\" area-label=\"Reason over phylogeny\">\n            <button\n              class=\"btn btn-primary\"\n              href=\"javascript:;\"\n              @click=\"reasonOverPhylogeny()\"\n            >\n              Reason over phylogeny <span v-if=\"reasoningInProgress\"><em>(in progress)</em></span>\n            </button>\n\n            <button\n              class=\"btn btn-secondary\"\n              href=\"javascript:;\"\n              @click=\"downloadAsJSONLD()\"\n            >\n              Download as ontology\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- All modals are included here -->\n    <AboutOpenTreeResolverModal />\n  </div>\n</template>\n\n<script>\n/*\n * Main application. Provides code for:\n *  - loading phyloreferences from JSON-LD, whether a local file or a URL\n *  - downloading Open Tree Taxonomy (OTT) Ids for each specifier\n *  - downloading the induced subtree for the set of all OTT ids\n */\n\nimport { has, isEqual, chunk, uniq, uniqueId, isString, keys } from 'lodash';\nimport jQuery from 'jquery';\nimport { PhylogenyWrapper, TaxonomicUnitWrapper } from '@phyloref/phyx';\nimport Vue from 'vue';\nimport { signer } from 'x-hub-signature';\nimport { saveAs } from 'filesaver.js-npm';\nimport zlib from 'zlib';\n\n// Navigation controls.\nimport TopNavigationBar from './components/TopNavigationBar.vue';\n\n// Major UI components.\nimport PhylorefTable from './components/PhylorefTable.vue';\nimport Phylotree from './components/phylogeny/Phylotree.vue';\n\n// Modal dialogs to be displayed above the UI.\nimport AboutOpenTreeResolverModal from './components/modals/AboutOpenTreeResolverModal.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    TopNavigationBar,\n    PhylorefTable,\n    AboutOpenTreeResolverModal,\n    Phylotree,\n  },\n  data: function() { return {\n    // Open Tree Resolver version\n    version: process.env.VUE_APP_VERSION,\n\n    // Currently loaded phyloreferences.\n    phylorefs: [],\n\n    // The Newick string for the current phylogeny.\n    newick: \"()\",\n\n    // Dictionary of Open Tree Taxonomy data by scientific name.\n    ottInfoByName: {},\n\n    // Dictionary of nodes by their '@id'.\n    nodesByID: {},\n\n    // Reasoning results from JPhyloRef.\n    reasoningResults: {},\n\n    // Is reasoning currently in progress?\n    reasoningInProgress: false,\n\n    // List of unknown OTT Ids, if any.\n    unknownOttIds: [],\n    unknownOttIdReasons: {},\n\n    // URL to Phyx context JSON.\n    PHYX_CONTEXT_JSON: \"http://www.phyloref.org/phyx.js/context/v0.2.0/phyx.json\",\n\n    // URL to be used as the produced ontology's base URI.\n    ONTOLOGY_BASEURI: \"http://example.org/phyloref_open_tree_resolver#\",\n\n    // List of imports in the produced ontology.\n    OWL_IMPORTS: [\n      'http://raw.githubusercontent.com/phyloref/curation-workflow/develop/ontologies/phyloref_testcase.owl',\n      'http://ontology.phyloref.org/2018-12-14/phyloref.owl',\n      'http://ontology.phyloref.org/2018-12-14/tcan.owl',\n    ],\n\n    // OWL terms we need to refer to.\n    CDAO_REPRESENTS_TU: 'obo:CDAO_0000187',\n    OWL_RESTRICTION: 'owl:Restriction',\n    OWL_ONTOLOGY: 'owl:Ontology',\n  }},\n  computed: {\n    allSpecifiers() {\n      // List of all currently loaded specifiers across all phylorefs.\n      return this.phylorefs.map(phyloref => this.getSpecifiersForPhyloref(phyloref)).reduce((acc, val) => acc.concat(val), []);\n    },\n    ottIdsForAllSpecifiers() {\n      // The list of all OTT ids across all phylorefs. This assumes that\n      // queryOTTIds has already been called!\n      const ottIds = this.allSpecifiers.map(specifier => this.getOTTId(specifier))\n        .filter(x => x !== undefined && x !== null);\n      return ottIds;\n    },\n    ottInfoBySpecifierLabel() {\n      // Convert ottInfoByName into matches by specifier label.\n      const ottInfoBySpecifierLabel = {};\n      this.allSpecifiers.forEach(specifier => {\n        const specifierLabel = new TaxonomicUnitWrapper(specifier).label;\n        if(!specifierLabel) return;\n\n        const sciname = this.getScinameForSpecifier(specifier);\n        if(!sciname) return;\n\n        const ottId = this.ottInfoByName[sciname];\n        if(!ottId) return;\n\n        ottInfoBySpecifierLabel[specifierLabel] = ottId;\n      });\n      return ottInfoBySpecifierLabel;\n    },\n    exampleJSONLDURLs() { return [\n      // Returns a list of example files to display in the \"Examples\" menu.\n      /*\n      {\n        url: 'examples/fisher_et_al_2007.jsonld',\n        title: 'Fisher et al, 2007',\n      },\n      {\n        url: 'examples/hillis_and_wilcox_2005.jsonld',\n        title: 'Hillis and Wilcox, 2005',\n      },*/\n      {\n        url: 'examples/brochu_2003.jsonld',\n        title: 'Brochu 2003',\n      },\n    ]},\n  },\n  methods: {\n    /*\n     * Methods for accessing specifiers on Phylorefs\n     */\n\n    getSpecifiersForPhyloref(phyloref) {\n      // Return a list of all specifiers for a particular phyloreference.\n      // Is guaranteed to return a list (even if it's an empty list).\n      const specifiers = phyloref.internalSpecifiers || [];\n      return specifiers.concat(phyloref.externalSpecifiers || []);\n    },\n\n    getScinameForSpecifier(specifier) {\n      // Returns the scientific name for a particular specifier.\n      // We currently extract this from the specifier label, although once we fix\n      // https://github.com/phyloref/phyx.js/issues/7, we should have a better\n      // scientific name object to use here.\n      const label = new TaxonomicUnitWrapper(specifier).label;\n      if(label.startsWith(\"Specimen\")) return undefined;\n      const matches = label.match(/^\\w+ [a-z-]+/);\n      if(matches) return matches[0];\n      return undefined;\n    },\n\n    getOTTId(specifier) {\n      // Returns the OTT taxonomy ID for a particular specifier by scientific name.\n      const matches = this.ottInfoByName[this.getScinameForSpecifier(specifier)];\n      if(matches && matches.length > 0) {\n        return matches[0]['taxon']['ott_id'];\n      }\n    },\n\n    /*\n     * Open Tree synthetic tree methods\n     */\n\n    downloadInducedSubtreeFromOToL(ottIds) {\n      // Given a set of OTT ids, download the induced subtree from the Open Tree API.\n\n      if(ottIds.length === 0) return;\n\n      // Reset the unknown OTT Ids.\n      this.unknownOttIds = [];\n      this.unknownOttIdReasons = {};\n\n      // Query the induced subtree, i.e. a tree showing the relationships between all\n      // these OTT ids.\n      jQuery.ajax({\n        type: 'POST',\n        url: this.$config.OTT_API_INDUCED_SUBTREE,\n        data: JSON.stringify({\n          ott_ids: ottIds,\n        }),\n        contentType: 'application/json; charset=utf-8',\n        dataType: 'json',\n        success: (data) => {\n          this.newick = data.newick;\n        },\n      })\n        .fail(x => {\n          // If some OTT ids were not found on the synthetic tree, the OTT API\n          // will return a list of nodes that could not be matched. We can remove\n          // these OTT ids from our list of queries and trying again.\n          const regexErrorMessage = /^\\[\\/v3\\/tree_of_life\\/induced_subtree\\] Error: node_id '\\w+' was not found!/;\n          if(regexErrorMessage.test(x.responseJSON.message)) {\n            const unknownOttIdReasons = x.responseJSON.unknown;\n            console.log(\"The Open Tree synthetic tree does not contain the following nodes: \", unknownOttIdReasons);\n            this.unknownOttIdReasons = unknownOttIdReasons;\n            this.unknownOttIds = keys(unknownOttIdReasons);\n\n            // Remove the unknown OTT ids from the list of OTT ids to be queried.\n            const knownOttIds = ottIds.filter(id => !has(unknownOttIdReasons, \"ott\" + id));\n            console.log(\"Query has been reduced to the following nodes: \", knownOttIds);\n\n            // Redo query without unknown OTT Ids.\n            jQuery.ajax({\n              type: 'POST',\n              url: this.$config.OTT_API_INDUCED_SUBTREE,\n              data: JSON.stringify({\n                ott_ids: knownOttIds,\n              }),\n              contentType: 'application/json; charset=utf-8',\n              dataType: 'json',\n              success: (data) => {\n                this.newick = data.newick;\n              },\n            }).fail(x => console.log(\"Error accessing Open Tree induced_subtree\", x));\n          } else {\n            console.log(\"Error accessing Open Tree induced_subtree\", x);\n          }\n        });\n    },\n\n    /*\n     * Open Tree Taxonomy methods\n     */\n\n    queryOTTIds() {\n      // Calculate names from currently loaded specifiers.\n      const names = this.allSpecifiers.map(specifier => this.getScinameForSpecifier(specifier));\n      this.queryOTTIdsForNames({names});\n    },\n\n    queryOTTIdsForNames(options) {\n      // Creates queries to the Open Tree Taxonomy for the provided names.\n      // This will return asynchonously; you need to call getOTTId(name)\n      // to retrieve the results.\n      // Options can be anything from https://github.com/OpenTreeOfLife/germinator/wiki/TNRS-API-v3#match_names, including:\n      //  - context_name\n      //  - do_approximate_matching\n\n      let setOTTInfoByNames = (results) => {\n        // Given a set of matches, fill in the names in this.ottInfoByName.\n\n        results.forEach(info => {\n          if(has(info, 'name') && info.name && has(info, 'matches') && info.matches && info.matches.length > 0) {\n            const name = info.name.trim();\n            Vue.set(this.ottInfoByName, name, info['matches'] || []);\n          }\n        });\n      };\n\n      // Deduplicate names to be queried.\n      const names = uniq(options.names)\n        .filter(name => name !== undefined && name !== null) // Eliminate any undefineds or nulls.\n        .sort();\n\n      // Step 1. Delete existing entries for the provided names.\n      setOTTInfoByNames(names.map(name => {\n        return {\n          name,\n          matches: [],\n        };\n      }));\n      // OToL TNRS match_names has a limit of 1,000 names.\n      chunk(names, 999).forEach(chunk => {\n        options.names = chunk;\n        const data = JSON.stringify(options);\n        // Step 2. Spawn queries to OTT asking for the names.\n        jQuery.ajax({\n          type: 'POST',\n          url: this.$config.OTT_API_TNRS_MATCH_NAMES,\n          data,\n          contentType: 'application/json; charset=utf-8',\n          dataType: 'json',\n          success: (data) => {\n            setOTTInfoByNames(data.results);\n          },\n        })\n          .fail(x => console.log(\"Error accessing Open Tree Taxonomy\", x));\n      });\n    },\n\n    /*\n     * Reasoning over phylogenies\n     */\n\n    convertTUtoRestriction(tunit) {\n      // Return an OWL restriction for a taxonomic unit or specifier.\n      // This code is taken from phyx2ontology.js [1], but once it has been moved into\n      // phyx.js [2], we can delete it here and call it directly in the library.\n      // - [1] https://github.com/phyloref/clade-ontology/blob/02bb88cff1e2cbe28a7214b90b8055a5fc9fd903/phyx2ontology/model2.js#L25-L79\n      // - [2] https://github.com/phyloref/phyx.js/issues/4\n\n      return [new TaxonomicUnitWrapper(tunit).asJSONLD];\n    },\n\n    getPhylorefsAndPhylogenyAsOntology() {\n      // Returns a JSON-LD ontology that can includes the current phylorefs and\n      // phylogeny.\n      // Note that we only support JSON-LD files as input -- we don't craft\n      // clade definitions if they haven't already been created in\n      // phyloref.equivalentClass.\n\n      // Add the phyloreferences.\n      const phylorefsWithEquivalentClass = this.phylorefs.filter(\n        phyloref => has(phyloref, 'equivalentClass')\n      );\n\n      phylorefsWithEquivalentClass.forEach(phyloref => {\n        // Note that multiple files might have overlapping '@id's.\n        // To avoid confusion, we re-@id all the phylorefs.\n        phyloref['@id'] = this.ONTOLOGY_BASEURI + 'phyloref_' + uniqueId();\n\n        // Every entity in the JSON-LD needs a '@context', so here is the one for this phyloref.\n        if(!has(phyloref, '@context')) {\n          phyloref['@context'] = this.PHYX_CONTEXT_JSON;\n        }\n      });\n\n      // Add the phylogeny.\n      const phylogenyNodes = new PhylogenyWrapper({\n        newick: this.newick,\n      }).getNodesAsJSONLD(this.ONTOLOGY_BASEURI + 'phylogeny');\n\n      // Track nodes by ID so we can look them up by @id later.\n      this.nodesByID = {};\n\n      // Modify nodes to support Model 2.0 taxonomic units.\n      phylogenyNodes.forEach(nodeAsParam => {\n        const node = nodeAsParam;\n        // Set a JSON-LD context.\n        node['@context'] = this.PHYX_CONTEXT_JSON;\n\n        // Make sure this node has a '@type'.\n        if (!has(node, '@type')) node['@type'] = [];\n        if (!Array.isArray(node['@type'])) node['@type'] = [node['@type']];\n        // We replace \"parent\" with \"obo:CDAO_0000179\" so we get has_Parent\n        // relationships in our output ontology.\n        // To be fixed in https://github.com/phyloref/phyx.js/issues/10\n        // if (has(node, 'parent')) node['obo:CDAO_0000179'] = { '@id': node.parent };\n\n        // Does this node have taxonomic units? If so, convert them into class expressions.\n        if (has(node, 'representsTaxonomicUnits')) {\n          node.representsTaxonomicUnits.forEach((tunit) => {\n            this.convertTUtoRestriction(tunit).forEach((restriction) => {\n              node['@type'].push({\n                '@type': this.OWL_RESTRICTION,\n                onProperty: this.CDAO_REPRESENTS_TU,\n                someValuesFrom: restriction,\n              });\n            });\n          });\n        }\n        // Now, rdfpipe can handle '@type's that contain restrictions,\n        // but OWLAPI can't. So let's translate all '@type's into\n        // 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type'.\n        node['http://www.w3.org/1999/02/22-rdf-syntax-ns#type'] = node['@type']\n          .map(c => isString(c) ? { '@id': c } : c);\n        delete node['@type'];\n        this.nodesByID[node['@id']] = node;\n      });\n      // Finally, add a header for this ontology.\n      let ontologyHeader = [\n        {\n          '@context': this.PHYX_CONTEXT_JSON,\n          '@id': this.ONTOLOGY_BASEURI,\n          '@type': this.OWL_ONTOLOGY,\n          'owl:imports': this.OWL_IMPORTS,\n        },\n      ];\n\n      return JSON.stringify(\n        ontologyHeader.concat(phylorefsWithEquivalentClass).concat(phylogenyNodes),\n        null,\n        4\n      );\n    },\n\n    downloadAsJSONLD() {\n      // Download a copy of the current ontology (to be reasoned over) as JSON-LD.\n      const content = [this.getPhylorefsAndPhylogenyAsOntology()];\n\n      // Save to local hard drive.\n      const jsonldFile = new File(content, 'download.jsonld', { type: 'application/json;charset=utf-8' });\n      saveAs(jsonldFile);\n    },\n\n    reasonOverPhylogeny() {\n      // Send JSON-LD to server for reasoning. Reasoning results will be stored in\n      // this.reasoningResults.\n\n      // Are we already reasoning? If so, ignore.\n      if (this.reasoningInProgress) return;\n      // Disable \"Reason\" buttons so they can't be reused.\n      this.reasoningInProgress = true;\n      this.reasoningResults = {};\n\n      // Make sure that the Reason button is updated before we convert the Phyx\n      // file into JSON-LD.\n      const outerThis = this;\n      Vue.nextTick(function () {\n        // Convert phylorefs and phylogeny to JSON-LD.\n        const jsonld = outerThis.getPhylorefsAndPhylogenyAsOntology();\n        const jsonldGzipped = zlib.gzipSync(jsonld);\n\n        // Prepare request for submission.\n        const query = jQuery.param({\n          // Convert Gzipped data into a string in Base64.\n          jsonldGzipped: Buffer.from(jsonldGzipped).toString('base64')\n        }).replace(/%20/g, '+');  // $.post will do this automatically,\n                                  // but we need to do this here so our\n                                  // signature works.\n\n        // Sign it with an X-Hub-Signature.\n        const sign = signer({\n            algorithm: 'sha1',\n            secret: outerThis.$config.JPHYLOREF_X_HUB_SIGNATURE_SECRET,\n        });\n        const signature = sign(new Buffer(query));\n\n        console.log('Query: ', query);\n        console.log('Signature: ', signature);\n\n        jQuery.post({\n          url: outerThis.$config.JPHYLOREF_SUBMISSION_URL,\n          data: query,\n          headers: {\n            'X-Hub-Signature': signature,\n          },\n        }).done((data) => {\n          outerThis.reasoningResults = data.phylorefs;\n          // console.log('Data retrieved: ', data);\n        }).fail((jqXHR, textStatus, errorThrown) => {\n          // We can try using the third argument, but it appears to be the\n          // HTTP status (e.g. 'Internal Server Error'). So we default to that,\n          // but look for a better one in the JSON response from the server, if\n          // available.\n          let error = errorThrown;\n          if (has(jqXHR, 'responseJSON') && has(jqXHR.responseJSON, 'error')) {\n            error = jqXHR.responseJSON.error;\n          }\n          if (error === undefined || error === '') error = 'unknown error';\n          alert(`Error occurred on server while reasoning: ${error}`);\n        }).always(() => {\n          // Reset \"Reasoning\" buttons to their usual state.\n          outerThis.reasoningInProgress = false;\n        });\n      });\n    },\n\n    /*\n     * Load phyloreferences from JSON-LD from URLs and files\n     */\n\n    loadJSONLDFromURL(url) {\n      // Load phylorefs from a JSON-LD file from a given URL.\n\n      jQuery.getJSON(url)\n        .done((data) => {\n          this.extractPhylorefsFromJSONLD(data);\n        })\n        .fail((error) => {\n          if (error.status === 200) {\n            alert(`Could not load JSON-LD file '${url}': file malformed, see console for details.`);\n          } else {\n            alert(`Could not load JSON-LD file '${url}': server error ${error.status} ${error.statusText} from ${JSON.stringify(error)}`);\n          }\n        });\n    },\n\n    loadJSONLDFromFileInputById(fileInputId) {\n      // Load phylorefs from one or more JSON-LD files from the local file system\n      // using FileReader. fileInput needs to be an HTML element representing an\n      // <input type=\"file\"> in which the user has selected the local file(s)\n      // they wish to load.\n      //\n      // This code is based on https://stackoverflow.com/a/21446426/27310\n\n      if (typeof window.FileReader !== 'function') {\n        alert('The FileReader API is not supported on this browser.');\n        return;\n      }\n\n      const $fileInput = jQuery(fileInputId);\n      if (!$fileInput) {\n        alert('Programmer error: No file input element specified.');\n        return;\n      }\n\n      if (!$fileInput.prop('files')) {\n        alert('File input element found, but files property missing: try another browser?');\n        return;\n      }\n\n      const files = $fileInput.prop('files');\n      if (files.length === 0) {\n        alert('Please select a file before attempting to load it.');\n        return;\n      }\n\n      for(let x = 0; x < files.length; x++) {\n        const file = files.item(x);\n        const fr = new FileReader();\n        fr.onload = ((e) => {\n          const lines = e.target.result;\n          const jsonld = JSON.parse(lines);\n\n          this.extractPhylorefsFromJSONLD(jsonld);\n        });\n        fr.readAsText(file);\n      }\n    },\n\n    /*\n     * Phyloreference management\n     */\n\n    extractPhylorefsFromJSONLD(jsonld) {\n      // Extract phyloreferences from the provided JSON-LD representation.\n\n      let addPhyloref = (phyloref) => {\n        // Add a new phyloref to the list of phylorefs. We use isEqual\n        // to prevent adding the same phyloreference more than once, but we will\n        // add different phyloreferences with the same '@id'.\n        if(this.phylorefs.find(phy => isEqual(phy, phyloref)) !== undefined) return;\n\n        // No previous match? Then add it in!\n        this.phylorefs.push(phyloref);\n      };\n\n      // JSON-LD files sometimes contain an array of elements. In this case,\n      // we should try adding every one.\n      if(Array.isArray(jsonld)) {\n        jsonld.forEach(element => this.extractPhylorefsFromJSONLD(element));\n      }\n\n      // If this was generated by the Authoring Tool, then we can find phyloreferences\n      // just by looking for jsonld.phylorefs.\n      if(has(jsonld, 'phylorefs') && Array.isArray(jsonld.phylorefs)) {\n        jsonld.phylorefs.forEach(phy => addPhyloref(phy));\n      }\n\n      // If it was created by phyx2ontology, the phyloreferences can be recognized\n      // has having a subClassOf 'phyloref:Phyloreference'. Let's look for that.\n      if(has(jsonld, 'subClassOf')) {\n        // This entry might have multiple subclasses. If one of them is phyloref:Phyloreference,\n        // add it as a phyloreference.\n        if(Array.isArray(jsonld.subClassOf) && jsonld.subClassOf.includes('phyloref:Phyloreference'))\n          addPhyloref(jsonld);\n\n        // If this entry has a single subclass that is phyloref:Phyloreference,\n        // add it as a phyloreference.\n        if(jsonld.subClassOf === 'phyloref:Phyloreference')\n          addPhyloref(jsonld);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n/*\n * Classes for overall design.\n */\n\n#wrapper {\n  margin-top: 64px;\n  padding: 0.5em 1em;\n  transition: all 0.4s ease 0s;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefTable.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefTable.vue?vue&type=script&lang=js&\"","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","<template>\n  <div>\n    <!-- Navigation bar at the top of the page -->\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark mb-2 fixed-top\">\n      <a\n        class=\"navbar-brand\"\n        href=\"index.html\"\n      >\n        Open Tree Resolver <small>{{ version }}</small>\n      </a>\n      <div class=\"collapse navbar-collapse\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"#\"\n              onclick=\"$('#about-open-tree-resolver').modal()\"\n            >\n              About this tool\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://www.phyloref.org/\"\n            >\n              Phyloreferencing website\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://github.com/phyloref/open-tree-resolver\"\n            >\n              Github repository\n            </a>\n          </li>\n          <li class=\"nav-item\">\n            <a\n              class=\"nav-link\"\n              href=\"https://github.com/phyloref/open-tree-resolver/issues\"\n            >\n              Report bug\n            </a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </div>\n</template>\n\n<script>\n\n/*\n * The top navigation bar provides links to Phyloreferencing resources,\n * the about-us modal, and a link to report bugs.\n */\n\nexport default {\n  name: 'TopNavigationBar',\n  props: {\n    version: {\n      type: String,\n      default: 'unversioned',\n    },\n  },\n};\n</script>\n","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3b08fcab&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Include Vue and Vuex to set up them up correctly.\nimport Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nconst debug = process.env.NODE_ENV !== 'production';\n\nexport default new Vuex.Store({\n  state: {},\n  modules: {},\n  strict: debug,\n});\n","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-SG\": \"cdab\",\n\t\"./en-SG.js\": \"cdab\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","// Import Vue.\nimport Vue from 'vue';\n\n// Import Bootstrap.\nimport 'bootstrap';\nimport BootstrapVue from 'bootstrap-vue';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-vue/dist/bootstrap-vue.min.css';\n\n// Use vue-resize to track when phylogenies are resized.\nimport VueResize from 'vue-resize';\nimport 'vue-resize/dist/vue-resize.css';\n\n// Import the main Vue file.\nimport App from './App.vue';\n\n// Import our Vuex store.\nimport store from './store';\n\n// Set up JQuery as a global.\nwindow.$ = require('jquery');\n\n// Load configuration from the 'src/config.js' file included with this program.\nVue.prototype.$config = require('./config.js');\n\n// Add additional features to Vue.\nVue.use(BootstrapVue);\nVue.use(VueResize);\n\n// Turn off the Vue production tip on the console on Vue startup.\nVue.config.productionTip = false;\n\n// Set up Vue object.\nexport default new Vue({\n  el: '#app',\n  store,\n  render: h => h(App),\n});\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=script&lang=js&\"","<template>\n  <!-- About-us modal dialog box: acknowledges funding and links to libraries used -->\n  <div\n    id=\"about-open-tree-resolver\"\n    class=\"modal\"\n    tabindex=\"-1\"\n    role=\"dialog\"\n  >\n    <div\n      class=\"modal-dialog\"\n      role=\"document\"\n    >\n      <div class=\"modal-content\">\n        <!-- Header of tunit editor modal dialog box -->\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\">\n            About this tool\n          </h5>\n          <button\n            type=\"button\"\n            class=\"close\"\n            data-dismiss=\"modal\"\n            aria-label=\"Close\"\n          >\n            <span aria-hidden=\"true\">\n              &times;\n            </span>\n          </button>\n        </div>\n\n        <!-- Body of the about-us modal dialog -->\n        <div class=\"modal-body col-md-12\">\n          <p>\n            The Phyloreference Open Tree Resolver was built as part of the\n            <a href=\"https://www.phyloref.org\">\n              Phyloreferencing project\n            </a>,\n            funded by the US National Science Foundation through collaborative\n            grants <a href=\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458484\">\n              DBI-1458484\n            </a>\n            and <a href=\"http://www.nsf.gov/awardsearch/showAward?AWD_ID=1458604\">\n              DBI-1458604\n            </a>.\n            See <a href=\"http://www.phyloref.org/about/#funding\">\n              Funding\n            </a> for details.\n          </p>\n\n          <p>The Curation Tool uses a number of open-source libraries, including:</p>\n\n          <ul>\n            <li>\n              <a href=\"https://cli.vuejs.org/\">\n                Vue CLI 3\n              </a>\n            </li>\n            <li>\n              <a href=\"https://getbootstrap.com/\">\n                Bootstrap\n              </a>\n            </li>\n            <li>\n              <a href=\"https://jquery.com/\">\n                jQuery\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/veg/phylotree.js\">\n                phylotree.js\n              </a>,\n              published as <a href=\"https://doi.org/10.1186/s12859-018-2283-2\">\n                Shank <em>et al</em>, 2018\n              </a>\n            </li>\n            <li>\n              <a href=\"https://d3js.org/\">\n                D3.js\n              </a>\n            </li>\n            <li>\n              <a href=\"https://momentjs.com/\">\n                Moment.js\n              </a>\n            </li>\n            <li>\n              <a href=\"https://github.com/eligrey/FileSaver.js\">\n                FileSaver.js\n              </a>\n            </li>\n          </ul>\n        </div>\n\n        <!-- Footer of the about-us modal dialog -->\n        <div class=\"modal-footer\">\n          <button\n            type=\"button\"\n            class=\"btn btn-secondary\"\n            data-dismiss=\"modal\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*\n * A modal for displaying information about the Curation Tool\n */\n\nexport default {\n  name: 'AboutOpenTreeResolverModal',\n};\n</script>\n","<template>\n  <table class=\"table table-hover table-flush mb-0\">\n    <thead>\n      <th width=\"15%\">Name</th>\n      <th width=\"40%\">Description</th>\n      <th>Resolved Open Tree node</th>\n      <th>Specifiers</th>\n      <th>Open Tree Taxonomy ID</th>\n    </thead>\n    <tbody>\n      <tr\n        v-if=\"phylorefs.length === 0\"\n        class=\"bg-white\"\n      >\n        <td colspan=\"5\">\n          <center><em>No phyloreferences loaded</em></center>\n        </td>\n      </tr>\n      <template v-for=\"(phyloref, phylorefIndex) of phylorefs\">\n        <template v-if=\"getSpecifiersForPhyloref(phyloref).length === 0\">\n          <tr :key=\"'phyloref_' + phylorefIndex\">\n            <td>\n              {{ phyloref.label || `Phyloref ${phylorefIndex + 1}` }}\n            </td>\n            <td>\n              <span v-html=\"getPhylorefDescription(phyloref)\"></span>\n            </td>\n            <td>&nbsp;</td>\n            <td>\n              <center><em>No specifiers provided.</em></center>\n            </td>\n            <td>&nbsp;</td>\n          </tr>\n        </template>\n        <template v-else>\n          <template v-for=\"(specifier, specifierIndex) of getSpecifiersForPhyloref(phyloref)\">\n            <tr :key=\"'phyloref_' + phylorefIndex + '_specifier_' + specifierIndex\">\n              <template v-if=\"specifierIndex === 0\">\n                <td :rowspan=\"getSpecifiersForPhyloref(phyloref).length\">\n                  {{ phyloref.label || `Phyloref ${phylorefIndex + 1}` }}\n                </td>\n                <td :rowspan=\"getSpecifiersForPhyloref(phyloref).length\">\n                  <span v-html=\"getPhylorefDescription(phyloref)\"></span>\n                </td>\n                <td :rowspan=\"getSpecifiersForPhyloref(phyloref).length\">\n                  <a target=\"_blank\" :href=\"getURLForOTNode(phyloref)\">{{getLabelForOTNode(phyloref)}}</a>\n                </td>\n              </template>\n              <td>\n                {{getSpecifierType(phyloref, specifier)}}\n                <span v-html=\"getLabelForSpecifierAsHTML(specifier)\"></span>\n              </td>\n              <td>\n                <template v-if=\"getOTTId(specifier)\">\n                  <a\n                    target=\"_blank\"\n                    :href=\"'https://tree.opentreeoflife.org/opentree/@ott' + getOTTId(specifier)\"\n                  >{{getOTTId(specifier)}}</a>\n                  (<a\n                    target=\"_blank\"\n                    :href=\"'https://tree.opentreeoflife.org/taxonomy/browse?id=' + getOTTId(specifier)\"\n                  >ott</a>)\n                  <span v-if=\"unknownOttIdReasons['ott' + getOTTId(specifier)]\">\n                    <br>Not in synthetic tree: {{unknownOttIdReasons['ott' + getOTTId(specifier)]}}\n                  </span>\n                </template>\n              </td>\n            </tr>\n          </template>\n        </template>\n      </template>\n    </tbody>\n  </table>\n</template>\n\n<script>\n/*\n * A table for displaying information about phyloreferences. It displays the following information:\n *  - Phyloref label\n *  - Clade definition\n *  - Specifier\n *  - Open Tree Taxonomy ID\n */\n\nimport { has } from 'lodash';\nimport { TaxonomicUnitWrapper } from '@phyloref/phyx';\n\nexport default {\n  name: 'PhylorefTable',\n  props: {\n    phylorefs: {\n      type: Array,\n      default: () => { return []; },\n    },\n    ottInfoBySpecifierLabel: {\n      type: Object,\n      default: () => { return {}; },\n    },\n    reasoningResults: {\n      type: Object,\n      default: () => { return {}; },\n    },\n    nodesByID: {\n      type: Object,\n      default: () => { return {}; },\n    },\n    unknownOttIdReasons: {\n      type: Object,\n      default: () => { return {}; },\n    },\n  },\n  methods: {\n\n    /*\n     * Methods for accessing Open Tree resolved nodes\n     */\n\n    getURLForOTNode(phyloref) {\n      // Return the URL for the Open Tree resolved node for a particular phyloreference.\n\n      const phylorefId = phyloref['@id'];\n      if(phylorefId && has(this.reasoningResults, phylorefId)) {\n        const node = this.nodesByID[this.reasoningResults[phylorefId][0]];\n        if(!node) return undefined;\n\n        const label = this.getNodeLabel(node);\n        if(!label) return undefined;\n\n        const match = /^.*[_\\s](.*?ott.*)$/.exec(label);\n        if(match == null) {\n            const matchMRCA = /^mrca.*$/.exec(label);\n            if(matchMRCA == null) return undefined;\n            return \"https://tree.opentreeoflife.org/opentree/@\" + matchMRCA[0];\n        }\n        return \"https://tree.opentreeoflife.org/opentree/@\" + match[1];\n      }\n      return undefined;\n    },\n\n    getLabelForOTNode(phyloref) {\n      // Return the label for the Open Tree resolved node for a particular phyloreference.\n\n      const phylorefId = phyloref['@id'];\n      if(phylorefId && has(this.reasoningResults, phylorefId) && this.reasoningResults[phylorefId].length > 0) {\n        const node = this.nodesByID[this.reasoningResults[phylorefId][0]];\n        if(!node) return undefined;\n\n        return this.getNodeLabel(node);\n      }\n      return undefined;\n    },\n\n    getNodeLabel(node) {\n      // Return the label for a particular node.\n\n      const labels = node.labels || [];\n      if(labels.length == 0) return undefined;\n      return labels[0]; // Ignore other labels.\n    },\n\n    /*\n     * Phyloref and specifier getters (should be moved into phyx.js)\n     */\n\n    getPhylorefDescription(phyloref) {\n      // Returns the clade definition of a particular phyloreference. Supports both\n      // Phyx and Model 2.0 JSON-LD descriptions. Will return 'None' if none could\n      // be found.\n      const description = phyloref.cladeDefinition || phyloref['obo:IAO_0000115'] || 'None';\n\n      // If there are '\\n's in the text, replace them with <br />.\n      return description.replace(/\\n+/g, \"<br />\");\n    },\n\n    getOTTId(specifier) {\n      // Returns the Open Tree Taxonomy ID for a particular specifier.\n      const matches = this.ottInfoBySpecifierLabel[\n        new TaxonomicUnitWrapper(specifier).label\n      ];\n      if(matches && matches.length > 0) {\n        return matches[0]['taxon']['ott_id'];\n      }\n    },\n\n    getSpecifierType(phyloref, specifier) {\n      // Get the type of a particular specifier, which means looking up which\n      // field it is in. Will return one of the following strings: \"includes\",\n      // \"excludes\" or \"unknown\".\n      if((phyloref.internalSpecifiers || []).indexOf(specifier) !== -1) return \"includes\";\n      if((phyloref.externalSpecifiers || []).indexOf(specifier) !== -1) return \"excludes\";\n      return \"unknown\";\n    },\n\n    getSpecifiersForPhyloref(phyloref) {\n      // Return a list of all specifiers for a particular phyloreference.\n      // Is guaranteed to return a list (even if it's an empty list).\n      const specifiers = phyloref.internalSpecifiers || [];\n      return specifiers.concat(phyloref.externalSpecifiers || []);\n    },\n\n    getLabelForSpecifierAsHTML(specifier) {\n      // Return a string describing this specifier with HTML elements to format\n      // particular elements, such as italicizing the scientific name.\n      const label = new TaxonomicUnitWrapper(specifier).label;\n      if(!label) return \"(could not read)\";\n      if(label.startsWith(\"Specimen\")) return label;\n\n      return label.replace(/^\\w+ [a-z-]+/, \"<em>$&</em>\");\n    },\n  }\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('nav',{staticClass:\"navbar navbar-expand navbar-dark bg-dark mb-2 fixed-top\"},[_c('a',{staticClass:\"navbar-brand\",attrs:{\"href\":\"index.html\"}},[_vm._v(\"\\n      Open Tree Resolver \"),_c('small',[_vm._v(_vm._s(_vm.version))])]),_vm._m(0)])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"collapse navbar-collapse\"},[_c('ul',{staticClass:\"navbar-nav\"},[_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"#\",\"onclick\":\"$('#about-open-tree-resolver').modal()\"}},[_vm._v(\"\\n            About this tool\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://www.phyloref.org/\"}},[_vm._v(\"\\n            Phyloreferencing website\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://github.com/phyloref/open-tree-resolver\"}},[_vm._v(\"\\n            Github repository\\n          \")])]),_c('li',{staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link\",attrs:{\"href\":\"https://github.com/phyloref/open-tree-resolver/issues\"}},[_vm._v(\"\\n            Report bug\\n          \")])])])])}]\n\nexport { render, staticRenderFns }","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"f030d2b6-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TopNavigationBar.vue?vue&type=template&id=95c7132c&\"","import { render, staticRenderFns } from \"./PhylorefTable.vue?vue&type=template&id=4b1f0274&\"\nimport script from \"./PhylorefTable.vue?vue&type=script&lang=js&\"\nexport * from \"./PhylorefTable.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./Phylotree.vue?vue&type=template&id=27b3c606&\"\nimport script from \"./Phylotree.vue?vue&type=script&lang=js&\"\nexport * from \"./Phylotree.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Phylotree.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","module.exports = {\n  // URL to submit reasoning requests to.\n  JPHYLOREF_SUBMISSION_URL: 'https://reasoner.phyloref.org/reason',\n\n  // X-Hub-Signature secret used to communicate with JPhyloRef.\n  JPHYLOREF_X_HUB_SIGNATURE_SECRET: 'undefined',\n\n  // URL to match names against the Open Tree TNRS.\n  OTT_API_TNRS_MATCH_NAMES: 'https://api.opentreeoflife.org/v3/tnrs/match_names',\n\n  // URL to submit OTT induced subtree requests to.\n  OTT_API_INDUCED_SUBTREE: 'https://api.opentreeoflife.org/v3/tree_of_life/induced_subtree',\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.newickErrors.length > 0)?[_vm._l((_vm.newickErrors),function(error,errorIndex){return [_c('p',{key:errorIndex},[_c('strong',[_vm._v(_vm._s(error.title)+\".\")]),_vm._v(\" \"+_vm._s(error.message))])]})]:_c('div',{staticClass:\"phylotreeContainer\"},[_c('svg',{staticClass:\"col-md-12 phylogeny\",attrs:{\"id\":'phylogeny_' + _vm.phylogenyIndex}}),_c('ResizeObserver',{on:{\"notify\":function($event){return _vm.redrawTree()}}})],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"f030d2b6-vue-loader-template\\\"}!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Phylotree.vue?vue&type=template&id=27b3c606&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('table',{staticClass:\"table table-hover table-flush mb-0\"},[_vm._m(0),_c('tbody',[(_vm.phylorefs.length === 0)?_c('tr',{staticClass:\"bg-white\"},[_c('td',{attrs:{\"colspan\":\"5\"}},[_c('center',[_c('em',[_vm._v(\"No phyloreferences loaded\")])])],1)]):_vm._e(),_vm._l((_vm.phylorefs),function(phyloref,phylorefIndex){return [(_vm.getSpecifiersForPhyloref(phyloref).length === 0)?[_c('tr',{key:'phyloref_' + phylorefIndex},[_c('td',[_vm._v(\"\\n            \"+_vm._s(phyloref.label || (\"Phyloref \" + (phylorefIndex + 1)))+\"\\n          \")]),_c('td',[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.getPhylorefDescription(phyloref))}})]),_c('td',[_vm._v(\" \")]),_c('td',[_c('center',[_c('em',[_vm._v(\"No specifiers provided.\")])])],1),_c('td',[_vm._v(\" \")])])]:[_vm._l((_vm.getSpecifiersForPhyloref(phyloref)),function(specifier,specifierIndex){return [_c('tr',{key:'phyloref_' + phylorefIndex + '_specifier_' + specifierIndex},[(specifierIndex === 0)?[_c('td',{attrs:{\"rowspan\":_vm.getSpecifiersForPhyloref(phyloref).length}},[_vm._v(\"\\n                \"+_vm._s(phyloref.label || (\"Phyloref \" + (phylorefIndex + 1)))+\"\\n              \")]),_c('td',{attrs:{\"rowspan\":_vm.getSpecifiersForPhyloref(phyloref).length}},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.getPhylorefDescription(phyloref))}})]),_c('td',{attrs:{\"rowspan\":_vm.getSpecifiersForPhyloref(phyloref).length}},[_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.getURLForOTNode(phyloref)}},[_vm._v(_vm._s(_vm.getLabelForOTNode(phyloref)))])])]:_vm._e(),_c('td',[_vm._v(\"\\n              \"+_vm._s(_vm.getSpecifierType(phyloref, specifier))+\"\\n              \"),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.getLabelForSpecifierAsHTML(specifier))}})]),_c('td',[(_vm.getOTTId(specifier))?[_c('a',{attrs:{\"target\":\"_blank\",\"href\":'https://tree.opentreeoflife.org/opentree/@ott' + _vm.getOTTId(specifier)}},[_vm._v(_vm._s(_vm.getOTTId(specifier)))]),_vm._v(\"\\n                (\"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":'https://tree.opentreeoflife.org/taxonomy/browse?id=' + _vm.getOTTId(specifier)}},[_vm._v(\"ott\")]),_vm._v(\")\\n                \"),(_vm.unknownOttIdReasons['ott' + _vm.getOTTId(specifier)])?_c('span',[_c('br'),_vm._v(\"Not in synthetic tree: \"+_vm._s(_vm.unknownOttIdReasons['ott' + _vm.getOTTId(specifier)])+\"\\n                \")]):_vm._e()]:_vm._e()],2)],2)]})]]})],2)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',[_c('th',{attrs:{\"width\":\"15%\"}},[_vm._v(\"Name\")]),_c('th',{attrs:{\"width\":\"40%\"}},[_vm._v(\"Description\")]),_c('th',[_vm._v(\"Resolved Open Tree node\")]),_c('th',[_vm._v(\"Specifiers\")]),_c('th',[_vm._v(\"Open Tree Taxonomy ID\")])])}]\n\nexport { render, staticRenderFns }","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"f030d2b6-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PhylorefTable.vue?vue&type=template&id=4b1f0274&\"","import { render, staticRenderFns } from \"./TopNavigationBar.vue?vue&type=template&id=95c7132c&\"\nimport script from \"./TopNavigationBar.vue?vue&type=script&lang=js&\"\nexport * from \"./TopNavigationBar.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import { render, staticRenderFns } from \"./AboutOpenTreeResolverModal.vue?vue&type=template&id=40ef49c2&\"\nimport script from \"./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"\nexport * from \"./AboutOpenTreeResolverModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('TopNavigationBar',{attrs:{\"version\":_vm.version}}),_c('div',{attrs:{\"id\":\"wrapper\"}},[_c('div',{staticClass:\"card border-dark\"},[_c('h5',{staticClass:\"card-header border-dark\"},[_vm._v(\"\\n        Phyloreferences\\n      \")]),_c('div',{staticClass:\"card-body p-0\"},[_c('PhylorefTable',{attrs:{\"phylorefs\":_vm.phylorefs,\"ottInfoBySpecifierLabel\":_vm.ottInfoBySpecifierLabel,\"reasoningResults\":_vm.reasoningResults,\"nodesByID\":_vm.nodesByID,\"unknownOttIdReasons\":_vm.unknownOttIdReasons}})],1),_c('div',{staticClass:\"card-footer\"},[_c('div',{staticClass:\"btn-group\",attrs:{\"role\":\"group\",\"area-label\":\"Add phyloreferences\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"href\":\"javascript:;\",\"onclick\":\"$('#load-jsonld').trigger('click')\"}},[_vm._v(\"\\n            Import from ontology in JSON-LD\\n          \")]),_c('input',{staticClass:\"d-none\",attrs:{\"id\":\"load-jsonld\",\"type\":\"file\",\"multiple\":\"true\"},on:{\"change\":function($event){return _vm.loadJSONLDFromFileInputById('#load-jsonld')}}}),_c('button',{staticClass:\"btn btn-secondary dropdown-toggle\",attrs:{\"type\":\"button\",\"id\":\"addFromExamples\",\"data-toggle\":\"dropdown\",\"aria-haspopup\":\"true\",\"aria-expanded\":\"false\"}},[_vm._v(\"\\n            Add phyloreferences from example\\n          \")]),_c('div',{staticClass:\"dropdown-menu\",attrs:{\"aria-labelledby\":\"addFromExamples\"}},_vm._l((_vm.exampleJSONLDURLs),function(example){return _c('a',{key:example.url,staticClass:\"dropdown-item\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.loadJSONLDFromURL(example.url)}}},[_vm._v(\"\\n              \"+_vm._s(example.title)+\"\\n            \")])}),0)]),_c('div',{staticClass:\"btn-group ml-2\",attrs:{\"role\":\"group\",\"area-label\":\"Actions on phyloreferences\"}},[_c('button',{staticClass:\"btn btn-danger\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){_vm.phylorefs = []; _vm.reasoningResults = {};}}},[_vm._v(\"\\n            Clear phylorefs\\n          \")])]),_c('div',{staticClass:\"btn-group ml-2\",attrs:{\"role\":\"group\",\"area-label\":\"Open Tree Taxonomy tasks\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.queryOTTIds()}}},[_vm._v(\"\\n            Query specifiers against Open Tree of Life Taxonomy\\n          \")])])])]),_c('div',{staticClass:\"card border-dark mt-2\"},[_c('h5',{staticClass:\"card-header border-dark\"},[_vm._v(\"\\n        Phylogeny\\n      \")]),_c('div',{staticClass:\"card-body\"},[_c('form',[_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-md-2 control-label\",attrs:{\"for\":\"newick\"}},[_vm._v(\"\\n              Newick\\n            \")]),_c('div',{staticClass:\"col-md-10 input-group\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model.lazy\",value:(_vm.newick),expression:\"newick\",modifiers:{\"lazy\":true}}],staticClass:\"form-control\",attrs:{\"rows\":\"3\",\"placeholder\":\"Enter Newick string for phylogeny here\"},domProps:{\"value\":(_vm.newick)},on:{\"change\":function($event){_vm.newick=$event.target.value}}})])]),(_vm.unknownOttIds.length > 0)?_c('div',{staticClass:\"form-group row\"},[_c('label',{staticClass:\"col-md-2 control-label\",attrs:{\"for\":\"newick\"}},[_vm._v(\"\\n              Taxa with Open Tree IDs but not on the synthetic tree\\n            \")]),_c('div',{staticClass:\"col-md-10 input-group\"},[_vm._l((_vm.unknownOttIds),function(ottId,index){return [_c('a',{key:'unknownOttIds_a_' + ottId,attrs:{\"target\":\"_blank\",\"href\":'https://tree.opentreeoflife.org/taxonomy/browse?id=' + ottId.substring(3)}},[_vm._v(_vm._s(ottId))]),(index+1 < _vm.unknownOttIds.length)?_c('span',{key:'unknownOttIds_span_' + ottId,staticClass:\"pr-1\"},[_vm._v(\",\")]):_vm._e()]})],2)]):_vm._e()])]),_c('div',{staticClass:\"card-footer\"},[_c('div',{staticClass:\"btn-group\",attrs:{\"role\":\"group\",\"area-label\":\"Look up trees on the Open Tree of Life\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.downloadInducedSubtreeFromOToL(_vm.ottIdsForAllSpecifiers)}}},[_vm._v(\"\\n            Download induced subtree from the Open Tree of Life\\n          \")])])])]),_c('div',{staticClass:\"card border-dark mt-2\"},[_c('h5',{staticClass:\"card-header\"},[_vm._v(\"\\n        Phylogeny visualization\\n      \")]),_c('div',{staticClass:\"card-body\"},[_c('Phylotree',{attrs:{\"newick\":_vm.newick,\"baseURIForPhylogeny\":_vm.ONTOLOGY_BASEURI + 'phylogeny'}})],1),_c('div',{staticClass:\"card-footer\"},[_c('div',{staticClass:\"btn-group\",attrs:{\"role\":\"group\",\"area-label\":\"Reason over phylogeny\"}},[_c('button',{staticClass:\"btn btn-primary\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.reasonOverPhylogeny()}}},[_vm._v(\"\\n            Reason over phylogeny \"),(_vm.reasoningInProgress)?_c('span',[_c('em',[_vm._v(\"(in progress)\")])]):_vm._e()]),_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.downloadAsJSONLD()}}},[_vm._v(\"\\n            Download as ontology\\n          \")])])])])]),_c('AboutOpenTreeResolverModal')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export * from \"-!../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"f030d2b6-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=template&id=3b08fcab&\""],"sourceRoot":""}